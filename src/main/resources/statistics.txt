Solved:

2018:
Mar
 24 - 21,
 31 - 382, 447 t = O(n), s = O(1)

Apr
 1 - 646
 2 - 382
 4 - 3 (n), 5 (n2)
 5 - 11, 17 array mapping, rec, iter, 19
 6 - 33, 34, 48(careful with steps), 56
 8 - 142
 10 - 200
 18 - 322!!, 647 Expand Around Center, mention Manchester
 20 - 31, 49
 23 - 55 (top-down and bottom-up good example), 64 (O(n) memory), 78, 79, 105! (rec + it!!!)
 24 - 139, 215(Quick sort repeat), 621!!, 494
 25 - 416 (bottom-up!), 34 (rec and stack)

May
 02 - 394, 309, 300 (dp with binary search)
 03 - 406, 215, 148(merge sort)
 04 - 240, 221 (dp O(n))
 09 - 53 (dp)

June
July
Aug
Sep
Oct
Nov
Dec

2019:
Jan
Feb
Mar

Done with help:
 easy
  21 - iterator
  35 - see constrain
  125 - isLetterOrDigit
  101 - rec and non rec (exit condition)
  226 - bfs
  235 - point on value
  268 - use index
  405 - shift 4 and array
  401 - bits count function, t - constraint
  38 !
  696 !
  448 !
  160 169 171 172 198 110 190 202 118 121
  783 687 717 783 438 219 371 501 455


 medium
  94 - stack
  89 - x ^ x >> 1 (gray code)
  73 - const memory
  62 - non recursion !
  39 - remove
  2 - leading zero, non rec
  15 - corner 3, need write, sort !
  338 - non rec
  22 46 91 96! 513
  337! - [r, not r]
  216 - remove
  331 - dif calculation
  449 - deserialize (all in q)
  451 - need write
  150 - stack
  287 - dfs
  260 - small bit a & -a

 hard
  218!

Repeat:
 easy - 50
 medium - 20
 hard - 10

Backtracking general
https://leetcode.com/problems/subsets/discuss/27281/A-general-approach-to-backtracking-questions-in-Java-(Subsets-Permutations-Combination-Sum-Palindrome-Partitioning)

Salary negotiation
https://softwareengineeringdaily.com/2016/07/11/salary-negotiation-with-haseeb-qureshi/

Behaviour:
 https://www.youtube.com/watch?v=PJKYqLP6MRE

Design:
 https://www.youtube.com/watch?v=ZgdS0EUmn70

Design pattern:
 Features:
 Estimation:
 Design Goals:
 Skeleton of the design:
 Deep Dive:
 Optimization:
